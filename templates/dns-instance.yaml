apiVersion: apps/v1
kind: Deployment
metadata:
  name:  dnsinstance-1
  namespace: default
  labels:
    app:  dnsinstance-1
spec:
  selector:
    matchLabels:
      app: dnsinstance-1
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  dnsinstance-1 
    spec:
      containers:
      - name:  dnsinstance-1
        image: k8s.gcr.io/coredns/coredns:v1.8.4
        args:
        - -dns.port
        - "1053"
        - -conf
        - /etc/coredns/Corefile

        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 250m
            memory: 250Mi
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 1053
          name: dns
          protocol: UDP
        - containerPort: 1053
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: config-volume
        configMap:
          name: dnsinstance-1-corefile
          items:
          - key: Corefile
            path: Corefile
          - key: db.example.org
            path: db.example.org
          - key: db.0.0.10.in-addr.arpa
            path: db.0.0.10.in-addr.arpa