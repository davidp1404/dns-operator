apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: dnsservers.davidp1404.github.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: davidp1404.github.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          description: "Provide a way to define a DNS instance"
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                provider:
                  type: string
                  enum:
                  - corednsFiles
                  - azure
                  default: corednsFiles
                zones:
                  type: array
                  minItems: 1
                  items:
                    type: string
                replicas:
                  type: integer
                  minimum: 2
                  maximum: 5
                  default: 2
                nsRecords:
                  type: array
                  items:
                    type: string
                  default:
                  - "a.iana-servers.net."
                  - "b.iana-servers.net."
              required:
                - zones
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
      - name: Provider
        type: string
        description: Provider
        jsonPath: .spec.provider
      - name: Zones
        type: string
        description: Zones
        jsonPath: .spec.zones
      - name: Replicas
        type: string
        description: Replicas
        jsonPath: .spec.replicas
      - name: Age
        type: date
        jsonPath: .metadata.creationTimestamp 
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: dnsservers
    # singular name to be used as an alias on the CLI and for display
    singular: dnsserver
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: dnsServer
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - dnss
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: dnsrecords.davidp1404.github.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: davidp1404.github.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          description: "Provide a way to describe DNS records"
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
              properties:
                recordType:
                  description: "Define the record type from A, AAAA, PTR or CNAME"
                  type: string
                  enum:
                  - A
                  - AAAA
                  - PTR
                  - CNAME
                zone:
                  description: "Refer to one of the zones listed in <dnss>.spec.zones that owns the record"
                  type: string
                ttl:
                  description: "Default value of 5, allowed [5,3600], seconds the record is valid in resolver"
                  type: integer
                  minimum: 5
                  maximum: 3600
                  default: 5
                dnsServerRef:
                  description: "Refer to <dnss>.metadata.name that owns the record"
                  type: string
                recordKey:
                  description: "For the record type chosen the fist field, it could be a <hostname> for a A, AAA, CNAME records or an IP octect for a PTR record"
                  type: string
                recordValue:
                  description: "For the record type chosen the value field, it could be a ipv4 for A records, an ipv6 for AAAA records, or an <full_qualified_hostname> ending with '.' for CNAME records"
                  type: array
                  minItems: 1
                  items:
                    type: string
              oneOf:
              # Types A or AAAA
              - properties:
                  recordType:
                    pattern: "A"
                  recordValue:
                    items:
                      format: ipv4
              - properties:
                  recordType:
                    pattern: "AAAA"
                  recordValue:
                    items:
                      format: ipv6         
              # Types CNAME and PTR
              - properties:
                  recordType:
                    pattern: "CNAME|PTR"
                  recordValue:
                    items:
                      pattern: "\\.$"
              required:
                - recordType
                - recordKey
                - zone
                - recordValue
                - dnsServerRef
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
      - name: Zone
        type: string
        description: Zone
        jsonPath: .spec.zone
      - name: Key
        type: string
        description: Record key
        jsonPath: .spec.recordKey
      - name: Type
        type: string
        description: Record type
        jsonPath: .spec.recordType  
      - name: Value
        type: string
        description: Record value
        jsonPath: .spec.recordValue
      - name: TTL
        type: integer
        description: TTL
        jsonPath: .spec.ttl
      - name: Age
        type: date
        jsonPath: .metadata.creationTimestamp 
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: dnsrecords
    # singular name to be used as an alias on the CLI and for display
    singular: dnsrecord
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: dnsRecord
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - dnsr